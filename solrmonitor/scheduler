#!/bin/bash
######################################################################################################################################
# SCRIPT  : This script helps to schedule the Solr Cloud monitoring script.
# USAGE   : scheduler [Collection Name]
#           NOTE: Property file should be presnt defining if cluster is secure and if yes the kerberos config.
# VERSION : 1.0
# DATED   : 26 June, 2016
######################################################################################################################################

# Initialization section
scpt_hm=$(cd $(dirname $0);pwd)
if [ $# -ne 1 ] ; then
        echo "ERROR: Required parameter not passed!!!"
        exit 1
fi
coll_nm="$1"
log_name="$1.solr_monitor"

if [ ! -f ${scpt_hm}/solr_monitor.conf ] ; then
	echo "ERROR: Property file absent, thus aborting!!!"
        exit 1
fi
mail_id=$(grep ^solr.mail.to ${scpt_hm}/solr_monitor.conf | awk -F"=" '{ print $2 }')
max_logsz=$(grep ^solr.monitor.logsizemb ${scpt_hm}/solr_monitor.conf | awk -F"=" '{ print $2 }')
max_exe_tm=$(grep ^solr.monitor.exec.time ${scpt_hm}/solr_monitor.conf | awk -F"=" '{ print $2 }')

# Validate if previous execution still running(hung detection)
prev_exec=$(ps -ef | grep solr_monitor | grep ${coll_nm} | grep -v grep)
if [ -n "${prev_exec}" ] ; then
	echo "ALERT: Previous execution of monitoring script (Collection: ${coll_nm}) still executing." | /bin/mailx -s "ALERT - Solr Cloud Monitor - $(hostname)" -r HadoopAdmin "${mail_id}"
	exit 1
fi

# Rotate log file if required (File above required size will be rotated and one backup will be kept)
[[ -f ${scpt_hm}/log/${log_name}.log ]] && [[ `du -sm ${scpt_hm}/log/${log_name}.log | awk '{ print $1 }'` -gt ${max_logsz} ]] && mv ${scpt_hm}/log/${log_name}.log ${scpt_hm}/log/${log_name}.1.log

# Initiate new execution
echo "======================================= START EXECUTION : `date` =======================================" >> ${scpt_hm}/log/${log_name}.log

# Excute the monitor script in background
${scpt_hm}/solr_monitor "${coll_nm}" >> ${scpt_hm}/log/${log_name}.log 2>> ${scpt_hm}/log/${log_name}.log &

# Wait for 10 minutes to allow script to finish
sleep ${max_exe_tm}m

# Validate if current execution still running(hung detection)
cur_exec=$(ps -ef | grep solr_monitor | grep ${coll_nm} | grep -v grep)
if [ -n "${cur_exec}" ] ; then
        echo "ALERT: Current execution of monitoring script (Collection: ${coll_nm}) still executing." | /bin/mailx -s "ALERT - Solr Cloud Monitor - $(hostname)" -r HadoopAdmin "${mail_id}"
        exit 1
fi

#  Validate if current execution completed successfully(error detection)
tail -1 ${scpt_hm}/log/${log_name}.log | grep -q "Execution Completed"
if [ $? -ne 0 ] ; then
	echo "ALERT: Current execution of monitoring script (Collection: ${coll_nm}) not completed successfully." | /bin/mailx -s "ALERT - Solr Cloud Monitor - $(hostname)" -r HadoopAdmin "${mail_id}"
        exit 1
fi

# Complete execution successfully
exit 0
